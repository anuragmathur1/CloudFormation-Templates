Â {
   "AWSTemplateFormatVersion": "2010-09-09",
   "Resources": {

      "LambdaFunctionRole": {
         "Type": "AWS::IAM::Role",
         "Description":"This role is for the lambda function that will take logs from the log groups and send to S3.",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "lambda.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/"
         }
      },
      "RolePolicies": {
         "Type": "AWS::IAM::Policy",
         "Properties": {
            "PolicyName": "clw-access-to-lambda",
            "PolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Action": [
                    "logs:*",
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords",
                    "s3:PutObject"
                  ],
                  "Resource": "*"
               } ]
            },
            "Roles": [ { "Ref": "LambdaFunctionRole" } ]
         }
      },



      "LambdaS3WriteRole": {
         "Type": "AWS::IAM::Role",
         "Description":"This role is for the lambda function that will be allowed to write to S3 buckets",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "lambda.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/"
         }
      },
      "S3RolePolicies": {
         "Type": "AWS::IAM::Policy",
         "Properties": {
            "PolicyName": "clw-access-to-s3",
            "PolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": "*"
               } ]
            },
            "Roles": [ { "Ref": "LambdaS3WriteRole" } ]
         }
      },



      "LambdaS3ToESRole": {
         "Type": "AWS::IAM::Role",
         "Description":"This role is for the lambda function that will be allowed to write to S3 buckets",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "lambda.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/"
         }
      },
      "S3ReadRolePolicies": {
         "Type": "AWS::IAM::Policy",
         "Properties": {
            "PolicyName": "lambda-access-s3-es",
            "PolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*",
                    "logs:*",
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords",
                    "es:*"
                  ],
                  "Resource": "*"
               } ]
            },
            "Roles": [ { "Ref": "LambdaS3ToESRole" } ]
         }
      },


      "apacheAccessLogSubscriptionFilter" : {
        "Type" : "AWS::Logs::SubscriptionFilter",
        "Properties" : {
          "LogGroupName" : "apache_access_logs",
          "FilterPattern" : "[ip, id, user, timestamp, request, status, client, size]",
          "DestinationArn" : { "Fn::GetAtt" : [ "readAccessLogLambda", "Arn" ] }
        }
      },


      "readAccessLogLambda": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Handler": "read-clw-event.lambda_handler",
          "Role": { "Fn::GetAtt" : ["LambdaFunctionRole", "Arn"] },
          "Code": {
            "S3Bucket": "lambda-fucntions-am",
            "S3Key": "read-clw-event.zip"
          },
          "Runtime": "python2.7",
          "Timeout": "25",
          "TracingConfig": {
            "Mode": "Active"
          }
        }
      },

      "LambdaInvokeFromApacheAccess": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "FunctionName" : { "Fn::GetAtt" : ["readAccessLogLambda", "Arn"] },
          "Action": "lambda:InvokeFunction",
          "Principal": "logs.ap-southeast-2.amazonaws.com",
          "SourceArn": "arn:aws:logs:ap-southeast-2:453022476630:log-group:apache_access_logs:*"

        }
      },



      "s3LogsToES" : {
        "Type" : "AWS::Lambda::Function",
        "Properties": {
          "Handler" : "index.handler",
          "Role" : { "Fn::GetAtt" : ["LambdaS3ToESRole", "Arn"] },
            "Code" : {
            "S3Bucket": "lambda-fucntions-am",
            "S3Key": "index.zip"
            },
          "Runtime": "nodejs4.3",
          "Timeout": "25",
          "TracingConfig": {
            "Mode": "Active"
          }
        }
      },



      "S3InvokeLambdaPermission": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "FunctionName" : { "Fn::GetAtt" : ["s3LogsToES", "Arn"] },
          "Action": "lambda:InvokeFunction",
          "Principal": "s3.amazonaws.com",
          "SourceArn": "arn:aws:s3:::apache-access-logs-am"
        }
      },

      "ApacheAccessLogs": {
        "Type": "AWS::S3::Bucket",
        "Properties": {
          "BucketName": "apache-access-logs-am",
          "AccessControl": "BucketOwnerFullControl",
          "NotificationConfiguration" : {
            "LambdaConfigurations" : [{
              "Function" : { "Fn::GetAtt" : [ "s3LogsToES", "Arn" ] },
              "Event" : "s3:ObjectCreated:*",
              }]
          }

        }
      },


      "apacheEsDomain": {
        "Type": "AWS::Elasticsearch::Domain",
        "Properties": {
          "AccessPolicies" : {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*"
                },
                "Action": "es:*",
                "Resource": "arn:aws:es:ap-southeast-2:453022476630:domain/apache-access/*"
              }
            ]
          },
          "DomainName": "apache-access",
          "ElasticsearchClusterConfig": {
            "DedicatedMasterEnabled": "true",
            "InstanceCount": "1",
            "ZoneAwarenessEnabled": "false",
            "InstanceType": "t2.micro.elasticsearch",
            "DedicatedMasterType": "t2.micro.elasticsearch",
            "DedicatedMasterCount": "2"
          },
          "EBSOptions": {
            "EBSEnabled": true,
            "Iops": 0,
            "VolumeSize": 20,
            "VolumeType": "gp2"
          },
          "SnapshotOptions": {
            "AutomatedSnapshotStartHour": "0"
          },

          "AdvancedOptions": {
            "rest.action.multi.allow_explicit_index": "true"
          }
        }
      }



   }
}
